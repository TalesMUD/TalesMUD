{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../CharacterCard.svelte",
    "../../Input.svelte",
    "../../UserForm.svelte",
    "../../UserMenu.svelte",
    "../../Welcome.svelte",
    "../../Game.svelte"
  ],
  "sourcesContent": [
    "<style>\n  :global(body) {\n    background-color: #232333;\n    color: #d8dee9;\n    transition: background-color 0.3s;\n    margin: 0 auto;\n    padding: 0px;\n\n    /* The image used */\n    /*background-image: url(\"bg.jpg\");*/\n    /* Full height */\n    height: 100%;\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n  }\n  .userbutton {\n    margin-left: 1em;\n    margin-right: 1em;\n  }\n  :global(a:visited) {\n    text-decoration: none;\n    text-decoration-line: none;\n  }\n  nav {\n    background: #00000033;\n  }\n  nav {\n    margin-bottom: 2em;\n  }\n\n  img {\n    height: 40px;\n  }\n</style>\n\n<script>\n  import { Router, Link, Route } from \"svelte-routing\";\n  import { afterUpdate, onMount } from \"svelte\";\n\n  import { user } from \"./stores.js\";\n  import { fade } from \"svelte/transition\";\n\n  import Game from \"./game/Game.svelte\";\n\n  import UserMenu from \"./UserMenu.svelte\";\n  import Input from \"./Input.svelte\";\n  import Home from \"./Home.svelte\";\n  import Welcome from \"./Welcome.svelte\";\n  import Creator from \"./creator/Creator.svelte\";\n  import UserForm from \"./UserForm.svelte\";\n  import { createAuth } from \"./auth.js\";\n\n  // Auth0 config\n  const config = {\n    domain: \"owndnd.eu.auth0.com\",\n    client_id: \"mxcEqTuAUOzrL798mbVTpqFxpGGVp3gI\",\n    audience: \"http://talesofapirate.com/dnd/api\",\n  };\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = createAuth(config);\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n  };\n\n  onMount(async () => {\n    //var elems = document.querySelectorAll(\".tabs\");\n    //let instance = M.Tabs.init(elems);\n  });\n</script>\n\n<svelte:head>\n  <script src=\"https://cdn.auth0.com/js/auth0/9.0/auth0.min.js\">\n\n  </script>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\"\n  />\n  <script\n    src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js\">\n\n  </script>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n  />\n\n</svelte:head>\n\n<Router>\n  <nav class=\"nav-extended\">\n    <div class=\"nav-wrapper container\">\n      <a href=\"#\" class=\"brand-logo\">\n        <span class=\"valign-wrapper italic\">\n          <i class=\"small material-icons prefix\">menu_book</i>\n          <Link to=\"/\">Tales</Link>\n        </span>\n      </a>\n\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n        <li class=\"align-left\">\n          <Link to=\"play\">\n            <button on:click class=\"btn-small userbutton blue\">Play</button>\n          </Link>\n\n        </li>\n        {#if $isAuthenticated}\n          <li>\n            <Link to=\"creator\">Creator</Link>\n          </li>\n        {/if}\n        <li>\n          <Link to=\"signup\">News</Link>\n        </li>\n        <UserMenu />\n      </ul>\n\n    </div>\n    <div class=\"nav-content container\">\n      <ul class=\"tabs tabs-transparent\">\n        <li class=\"tab\">\n          <a href=\"#test1\">Rooms</a>\n        </li>\n        <li class=\"tab\">\n          <a href=\"#test2\">NPCs</a>\n        </li>\n        <li class=\"tab\">\n          <a href=\"#test3\">Items</a>\n        </li>\n        <li class=\"tab\">\n          <a href=\"#test4\">Quests</a>\n        </li>\n        <li class=\"tab\">\n          <a href=\"#world\">World</a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n\n  <main class=\"container\">\n\n    <Route path=\"account\" component=\"{UserForm}\" />\n    <Route path=\"creator\" component=\"{Creator}\" />\n    <Route path=\"play\" component=\"{Game}\" />\n\n    <Route path=\"/\">\n      {#if $isAuthenticated}\n        <UserForm />\n      {:else}\n        <Welcome />\n      {/if}\n    </Route>\n  </main>\n</Router>\n",
    "<style>\n  .img {\n    width: 64px;\n  }\n  .characterCard {\n    width: 300px;\n    margin: 2em;\n  } \n</style>\n\n<script>\n  import MediaQuery from \"svelte-media-query\";\n  import { fade } from \"svelte/transition\";\n  import moment from \"moment\";\n\n  export let name;\n  export let description;\n  export let created;\n\n  function formattedDate() {\n    return moment(created).format(\"MMMM Do YYYY, h:mm:ss a\");\n  }\n\n  function avatar() {\n    return \"https://robohash.org/\" + name;\n  }\n</script>\n\n\n  <div class=\"card cyan darken-3 hoverable characterCard center-align\">\n    <div class=\"card-content white-text\">\n      <img src=\"{avatar()}\" alt=\"\" class=\"circle img\" />\n      <span class=\"card-title\">{name}</span>\n    </div>\n    <div class=\"card-content\">\n      <p>{description}</p>\n      <p>{formattedDate()}</p>\n    </div>\n    <div class=\"card-action\">\n      <button class=\"waves-effect waves-teal btn-flat grey\" href=\"\">Details</button>\n    </div>\n  </div>\n",
    "<style>\n  textarea {\n    color: white;\n    font-size: smaller;\n    font-family: \"Courier New\", Courier, monospace;\n\n\n  }\n</style>\n\n<script>\n  import { fade } from \"svelte/transition\";\n  import { writable } from \"svelte/store\";\n\n  let input = \"\";\n\n  // Example POST method implementation:\n  async function postData(url = \"\", data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"no-cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n\n  async function post() {\n    if (input === \"\") return;\n\n    let data = {\n      text: input\n    };\n\n    postData(\"https://leaveamessage.ey.r.appspot.com/api/messages\", data)\n      //postData('/api/messages', data)\n      .then(data => {        \n        input = \"\";\n      });\n  }\n</script>\n\n<div class=\"row left-align\">\n  <form class=\"col s12 valign-wrapper left-align\">\n\n    <div class=\"input-field col s12 white-text\">\n      <textarea\n        id=\"icon_prefix2\"\n        class=\"materialize-textarea\"\n        bind:value=\"{input}\"\n      ></textarea>\n      <label for=\"icon_prefix2\">leave a message</label>\n    </div>\n    <button class=\"waves-effect waves-light btn-small white-text grey darken-2\" on:click=\"{post}\">\n      send\n    </button>\n  </form>\n\n</div>\n",
    "<style>\n  .content {\n    display: grid;\n    grid-template-columns: 20% 80%;\n    grid-column-gap: 10px;\n  }\n\n  input {\n    color: #eee;\n  }\n  input.disabled {\n    color: #eee;\n  }\n</style>\n\n<script>\n  import { writable } from \"svelte/store\";\n  import CharacterCard from \"./CharacterCard.svelte\";\n  import { onMount } from \"svelte\";\n\n  import { createAuth, getAuth } from \"./auth.js\";\n  import axios from \"axios\";\n  import { onInterval } from \"./utils.js\";\n\n  let user = writable({});\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n    user,\n  };\n\n  $: {\n    axios(`http://localhost:8010/api/user`, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: `Bearer ${$authToken}`,\n      },\n    }).then((r) => user.update((u) => r.data));\n  }\n\n  async function handleSubmit(event) {\n    if ($isAuthenticated) {\n      axios.put(`http://localhost:8010/api/user`, $user, {\n        mode: \"no-cors\",\n        credentials: \"same-origin\",\n        headers: {\n          Authorization: `Bearer ${$authToken}`,\n        },\n      });\n    }\n  }\n</script>\n\n<div class=\"row\">\n  <h3>Your Account data</h3>\n  <form class=\"col s12\">\n\n    <div class=\"row\">\n      <div class=\"input-field col s12\">\n        <input\n          bind:value=\"{$user.refid}\"\n          disabled\n          id=\"refid\"\n          type=\"text\"\n          class=\"disabled\"\n        />\n        <label for=\"refid\" class=\"active\">Reference ID</label>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"input-field col s12\">\n        <input\n          bind:value=\"{$user.name}\"\n          id=\"username\"\n          type=\"text\"\n          class=\"validate\"\n        />\n        <label for=\"username\" class=\"active\">Name</label>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"input-field col s12\">\n        <input\n          bind:value=\"{$user.nickname}\"\n          id=\"usernickname\"\n          type=\"text\"\n          class=\"validate\"\n        />\n        <label for=\"usernickname\" class=\"active\">Nickname</label>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"input-field col s12\">\n        <input\n          bind:value=\"{$user.email}\"\n          id=\"useremail\"\n          type=\"text\"\n          class=\"validate\"\n        />\n        <label for=\"useremail\" class=\"active\">E-Mail</label>\n      </div>\n    </div>\n  </form>\n\n  <div class=\"row\">\n    <div class=\"input-field col s12\">\n      <button\n        class=\"btn waves-effect waves-light\"\n        on:click=\"{() => handleSubmit()}\"\n      >\n        Submit\n        <i class=\"material-icons right\">send</i>\n      </button>\n    </div>\n  </div>\n</div>\n",
    "<style>\n  .userbutton {\n    margin-right: 1em;\n  }\n\n  .btn-small {\n    color: #eee;\n  }\n\n  .img {\n    width: 48px;\n  }\n</style>\n\n<script>\n  import { getAuth } from \"./auth.js\";\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  async function loadUserData() {\n    axios(`http://localhost:8010/api/user`, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: `Bearer ${$authToken}`,\n      },\n    })\n      .then((result) => console.log(result))\n      .catch((err) => console.log(err));\n  }\n\n  async function signup() {\n    await login();\n\n    if ($isAuthenticated) {\n      await loadUserData();\n    }\n  }\n</script>\n\n<!-- Dropdown Structure -->\n<ul id=\"dropdown1\" class=\"dropdown-content\">\n  <li>\n    <a href=\"#!\">one</a>\n  </li>\n  <li>\n    <a href=\"#!\">two</a>\n  </li>\n  <li class=\"divider\"></li>\n  <li>\n    <a href=\"#!\">three</a>\n  </li>\n</ul>\n\n{#if $isLoading}\n  <li class=\"right-align\">\n    <p>Loading ...</p>\n  </li>\n{:else if $authError}\n  <li class=\"right-align\">\n    <p>Got error: {$authError.message}</p>\n  </li>\n{:else if !$isAuthenticated}\n  <li class=\"right-align\">\n    <p on:click=\"{() => signup()}\" class=\"btn-small userbutton green\">Signup</p>\n  </li>\n  <li class=\"right-align\">\n    <button on:click=\"{() => login()}\" class=\"btn-small userbutton green\">\n      Log in\n    </button>\n  </li>\n{:else}\n  <li class=\"right-align\">\n    <button on:click=\"{() => logout()}\" class=\"btn-flat\">\n      Log out\n    </button>\n  </li>\n  <li>\n    <a class=\"dropdown-trigger\" href=\"#!\" data-target=\"dropdown1\">\n      {$userInfo.name}\n      <i class=\"material-icons right\">arrow_drop_down</i>\n    </a>\n  </li>\n  <li>\n    <img src=\"{$userInfo.picture}\" alt=\"\" class=\"circle img \" />\n\n  </li>\n{/if}\n",
    "<style>\n.loginText {\n    color: greenyellow;\n}\n</style>\n\n<script>\nimport {user} from \"./stores.js\"\n\n</script>\n\n<div class=\"center-align\">\n  <h4>Welcome {$user.name}</h4>\n  <p>Please <a href class=loginText>log</a> in or <a href class=loginText>signup</a></p>\n</div>\n",
    "<style>\n  #terminalWindow {\n    padding: 1em;\n    background: #000;\n    border-width: 2px;\n    border-style: solid;\n    border-color: #33ff2266;\n    border-radius: 0.5em;\n  }\n</style>\n\n<script>\n  import \"../../node_modules/xterm/css/xterm.css\";\n  import { onMount, onDestroy } from \"svelte\";\n  import { createAuth, getAuth } from \"../auth.js\";\n  import axios from \"axios\";\n  import xterm from \"xterm\";\n  import LocalEchoController from \"./echo/LocalEchoController\";\n  import fit from \"xterm-addon-fit\";\n  import { createClient, getClient } from \"./Client\";\n\n  let client;\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n  };\n\n  $: {\n  }\n  function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function readLine(localEcho, term) {\n    localEcho\n      .read(\"~$ \")\n      .then((input) => {\n        client.onInput(input);\n        readLine(localEcho, term);\n      })\n      .catch((error) => console.log(`Error reading: ${error}`));\n  }\n\n  const createRenderer = (term) => {\n    return (data) => {\n      term.writeln(data);\n    };\n  };\n\n  async function setupTerminal() {\n    var term = new xterm.Terminal();\n    var fitAddon = new fit.FitAddon();\n\n    term.loadAddon(fitAddon);\n\n    // setup terminal\n    term.setOption(\"cursorBlink\", true);\n    term.setOption(\"convertEol\", true);\n\n    term.open(document.getElementById(\"terminal\"));\n    fitAddon.fit();\n\n    const localEcho = new LocalEchoController(term);\n    localEcho.addAutocompleteHandler(autocompleteCommonCommands);\n    term.writeln(\"Connected to [Tales of the Red Dragon's Lair] ...\");\n\n    client = createClient(createRenderer(term));\n\n    readLine(localEcho, term);\n  }\n\n  onMount(async () => {\n    // change global background\n    document.body.style.backgroundImage = \"url('bg.jpg')\";\n    document.body.style.backdropFilter =\n      \"blur(10px) saturate(30%) brightness(50%)\";\n    setupTerminal();\n  });\n\n  onDestroy(async () => {\n    // change global background\n    document.body.style.backgroundImage = \"\";\n    document.body.style.backdropFilter = \"\";\n    setupTerminal();\n  });\n\n  function autocompleteCommonCommands(index, tokens) {\n    if (index == 0) return [\"north\", \"east\", \"south\", \"west\", \"say\"];\n    return [];\n  }\n</script>\n\n<div id=\"terminalWindow\" class=\"z-depth-3\">\n  <div id=\"terminal\"></div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AACU,IAAI,AAAE,CAAC,AACb,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,gBAAgB,CAAC,IAAI,CACjC,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,GAAG,CAKZ,MAAM,CAAE,IAAI,CAEZ,mBAAmB,CAAE,MAAM,CAC3B,iBAAiB,CAAE,SAAS,CAC5B,eAAe,CAAE,KAAK,AAExB,CAAC,AACD,WAAW,eAAC,CAAC,AACX,WAAW,CAAE,GAAG,CAChB,YAAY,CAAE,GAAG,AACnB,CAAC,AACO,SAAS,AAAE,CAAC,AAClB,eAAe,CAAE,IAAI,CACrB,oBAAoB,CAAE,IAAI,AAC5B,CAAC,AACD,GAAG,eAAC,CAAC,AACH,UAAU,CAAE,SAAS,AACvB,CAAC,AACD,GAAG,eAAC,CAAC,AACH,aAAa,CAAE,GAAG,AACpB,CAAC;AC9BD,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,AACb,CAAC,AACD,cAAc,eAAC,CAAC,AACd,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,AACb,CAAC;ACND,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,AAGhD,CAAC;ACAD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,SAAS,eAAC,CAAC,AACd,KAAK,CAAE,IAAI,AACb,CAAC;ACXD,WAAW,aAAC,CAAC,AACX,YAAY,CAAE,GAAG,AACnB,CAAC,AAED,UAAU,aAAC,CAAC,AACV,KAAK,CAAE,IAAI,AACb,CAAC,AAED,IAAI,aAAC,CAAC,AACJ,KAAK,CAAE,IAAI,AACb,CAAC;ACVH,UAAU,eAAC,CAAC,AACR,KAAK,CAAE,WAAW,AACtB,CAAC;ACFC,eAAe,eAAC,CAAC,AACf,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,SAAS,CACvB,aAAa,CAAE,KAAK,AACtB,CAAC"
}