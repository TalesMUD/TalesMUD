{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../UserForm.svelte",
    "../UserMenu.svelte",
    "../Welcome.svelte",
    "../CharacterCard.svelte",
    "../CharacterCreator.svelte",
    "../RoomsEditor.svelte",
    "../Game.svelte"
  ],
  "sourcesContent": [
    "<style>\n  :global(body) {\n    background-color: #232333;\n    color: #d8dee9;\n    transition: background-color 0.3s;\n    margin: 0 auto;\n    padding: 0px;\n\n    /* The image used */\n    /*background-image: url(\"bg.jpg\");*/\n    /* Full height */\n    height: 100%;\n    /* Center and scale the image nicely */\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    text-decoration: none;\n    text-decoration-line: none;\n  }\n  :global(a:href) {\n    text-decoration: none;\n  }\n  :global(a) {\n    color: #dedede;\n\n    text-decoration: none;\n  }\n  :global(a:hover) {\n    text-decoration: none;\n  }\n\n  .iconspacing {\n    margin-right: 0.5em;\n  }\n\n  :global(a:visited) {\n    text-decoration: none;\n    text-decoration-line: none;\n    color: #aaa;\n  }\n  nav {\n    background: #00000055;\n  }\n  nav {\n    margin-bottom: 2em;\n  }\n\n  img {\n    height: 40px;\n  }\n</style>\n\n<script>\n  import {\n    HashIcon,\n    ShieldIcon,\n    BookOpenIcon,\n    EditIcon,\n    PlayIcon,\n  } from \"svelte-feather-icons\";\n  import { Router, Link, Route, navigate } from \"svelte-routing\";\n  import { afterUpdate, onMount } from \"svelte\";\n  import NavLink from \"./components/NavLink.svelte\";\n\n  import { user, subMenu } from \"./stores.js\";\n  import { fade } from \"svelte/transition\";\n\n  import Game from \"./game/Game.svelte\";\n\n  import UserMenu from \"./UserMenu.svelte\";\n\n  import Welcome from \"./Welcome.svelte\";\n  import Creator from \"./creator/Creator.svelte\";\n  import Characters from \"./characters/Characters.svelte\";\n\n  import UserForm from \"./UserForm.svelte\";\n  import { createAuth } from \"./auth.js\";\n\n  // Auth0 config\n  const config = {\n    domain: \"owndnd.eu.auth0.com\",\n    client_id: \"mxcEqTuAUOzrL798mbVTpqFxpGGVp3gI\",\n    audience: \"http://talesofapirate.com/dnd/api\",\n  };\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = createAuth(config);\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n  };\n\n  onMount(async () => {\n    //var elems = document.querySelectorAll(\".tabs\");\n    //let instance = M.Tabs.init(elems);\n  });\n  export let url = \"\";\n</script>\n\n<svelte:head>\n  <script src=\"https://cdn.auth0.com/js/auth0/9.0/auth0.min.js\">\n\n  </script>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\"\n  />\n  <script\n    src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js\">\n\n  </script>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n  />\n\n</svelte:head>\n\n<Router url=\"{url}\">\n  <nav class=\"nav-extended\">\n    <div class=\"nav-wrapper container\">\n      <a href=\"#\" class=\"brand-logo\">\n        <span class=\"valign-wrapper italic\">\n          <span class=\"iconspacing\">\n            <BookOpenIcon size=\"24\" />\n          </span>\n          <NavLink to=\"/\">Tales</NavLink>\n        </span>\n      </a>\n\n      <ul class=\"right hide-on-med-and-down\">\n\n        <li>\n          <NavLink to=\"/play\">\n            <span class=\"valign-wrapper\">\n              <span class=\"iconspacing valign-wrapper\">\n                <PlayIcon size=\"18\" />\n              </span>\n              Play\n            </span>\n          </NavLink>\n\n        </li>\n        {#if $isAuthenticated}\n          <li>\n            <NavLink to=\"/list\">\n              <span class=\"valign-wrapper\">\n                <span class=\"iconspacing valign-wrapper\">\n                  <EditIcon size=\"18\" />\n                </span>\n                Top Characters\n              </span>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/creator/rooms\">\n              <span class=\"valign-wrapper\">\n                <span class=\"iconspacing valign-wrapper\">\n                  <EditIcon size=\"18\" />\n                </span>\n                Creator\n              </span>\n            </NavLink>\n          </li>\n        {/if}\n        <li>\n          <NavLink to=\"signup\">News</NavLink>\n        </li>\n        <UserMenu />\n      </ul>\n    </div>\n\n    {#if $subMenu.active}\n      <div class=\"nav-content container\">\n        <ul class=\"tabs tabs-transparent\">\n          {#each $subMenu.entries as entry}\n            <li class=\"tab\">\n              <NavLink to=\"{entry.nav}\">{entry.name}</NavLink>\n            </li>\n          {/each}\n        </ul>\n      </div>\n    {/if}\n\n  </nav>\n\n  <main class=\"container\">\n\n    <Route path=\"account\" component=\"{UserForm}\" />\n    <Route path=\"creator/*\" component=\"{Creator}\" />\n    <Route path=\"list\" component=\"{Characters}\" />\n    <Route path=\"play\" component=\"{Game}\" />\n\n    <Route path=\"/\">\n\n      <Welcome />\n\n    </Route>\n  </main>\n</Router>\n",
    "<style>\n  .content {\n    display: grid;\n    grid-template-columns: 20% 80%;\n    grid-column-gap: 10px;\n  }\n\n  input {\n    color: #eee;\n  }\n  #refid {\n    color: #999;\n  }\n  #refidlabel {\n    color: #999;\n  }\n</style>\n\n<script>\n  import { writable } from \"svelte/store\";\n  import { onMount } from \"svelte\";\n\n  import { createAuth, getAuth } from \"./auth.js\";\n  import axios from \"axios\";\n  import { onInterval } from \"./utils.js\";\n\n  let user = writable({});\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n    user,\n  };\n\n  $: {\n    axios(`http://localhost:8010/api/user`, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: `Bearer ${$authToken}`,\n      },\n    }).then((r) => {\n      user.update((u) => r.data);\n      \n    });\n  }\n\n  async function handleSubmit(event) {\n    if ($isAuthenticated) {\n      axios.put(`http://localhost:8010/api/user`, $user, {\n        mode: \"no-cors\",\n        credentials: \"same-origin\",\n        headers: {\n          Authorization: `Bearer ${$authToken}`,\n        },\n      });\n    }\n  }\n</script>\n\n<div class=\"row\">\n  <h3>Your Account data</h3>\n  <form class=\"col s12\">\n\n    <div class=\"row\">\n      <div class=\"input-field col s12\">\n        <input\n          bind:value=\"{$user.refid}\"\n          id=\"refid\"\n          type=\"text\"\n          disabled\n        />\n        <label id=\"refidlabel\" for=\"refid\" class=\"active\">Reference ID</label>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"input-field col s12\">\n        <input\n          bind:value=\"{$user.name}\"\n          id=\"username\"\n          type=\"text\"\n          class=\"validate\"\n        />\n        <label for=\"username\" class=\"active\">Name</label>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"input-field col s12\">\n        <input\n          bind:value=\"{$user.nickname}\"\n          id=\"usernickname\"\n          type=\"text\"\n          class=\"validate\"\n        />\n        <label for=\"usernickname\" class=\"active\">Nickname</label>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"input-field col s12\">\n        <input\n          bind:value=\"{$user.email}\"\n          id=\"useremail\"\n          type=\"text\"\n          class=\"validate\"\n        />\n        <label for=\"useremail\" class=\"active\">E-Mail</label>\n      </div>\n    </div>\n  </form>\n\n  <div class=\"row\">\n    <div class=\"input-field col s12\">\n      <button\n        class=\"btn waves-effect waves-light\"\n        on:click=\"{() => handleSubmit()}\"\n      >\n        Submit\n        <i class=\"material-icons right\">send</i>\n      </button>\n    </div>\n  </div>\n</div>\n",
    "<style>\n  .userbutton {\n    margin-right: 1em;\n  }\n\n  .btn-small {\n    color: #eee;\n  }\n\n  .img {\n    width: 42px;\n  }\n</style>\n\n<script>\n  import { onMount } from \"svelte\";\n  import { UserIcon } from \"svelte-feather-icons\";\n\n  import { getAuth } from \"./auth.js\";\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  async function loadUserData() {\n    axios(`http://localhost:8010/api/user`, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: `Bearer ${$authToken}`,\n      },\n    })\n      .then((result) => console.log(result))\n      .catch((err) => console.log(err));\n  }\n\n  async function signup() {\n    await login();\n\n    if ($isAuthenticated) {\n      await loadUserData();\n    }\n  }\n\n  onMount(() => {\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      var elems = document.querySelectorAll(\".dropdown-trigger\");\n      var instances = M.Dropdown.init(elems);\n    });\n  });\n</script>\n\n<!-- Dropdown Structure -->\n<ul id=\"dropdown1\" class=\"dropdown-content\">\n  <li>\n    <a href=\"#!\" on:click=\"{() => logout()}\">logout</a>\n  </li>\n  <li>\n    <a href=\"account\">profile</a>\n  </li>\n</ul>\n\n{#if $isLoading}\n  <li class=\"right-align\">...</li>\n{:else if !$isAuthenticated}\n  <li class=\"right-align\">\n    <p on:click=\"{() => signup()}\" class=\"btn-small userbutton green\">Signup</p>\n  </li>\n  <li class=\"right-align\">\n    <button on:click=\"{() => login()}\" class=\"btn-small userbutton green\">\n      Log in\n    </button>\n  </li>\n{/if}\n<li>\n\n  <a class=\"dropdown-trigger\" href=\"#\" data-target=\"dropdown1\">\n    <span class=\"valign-wrapper\">\n\n      {#if $isAuthenticated}\n        <img src=\"{$userInfo.picture}\" alt=\"\" class=\"circle img \" />\n        <i class=\"material-icons left\">arrow_drop_down</i>\n      {/if}\n    </span>\n\n  </a>\n</li>\n",
    "<style>\n  .loginText {\n    color: greenyellow;\n  }\n\n  .modal {\n    background-color: darkslategrey;\n  }\n</style>\n\n<script>\n  import { onMount } from \"svelte\";\n\n  import { createAuth, getAuth } from \"./auth.js\";\n  import axios from \"axios\";\n  import { onInterval } from \"./utils.js\";\n  import { getUser } from \"./api/user.js\";\n  import { writable } from \"svelte/store\";\n\n  const nickname = writable(\"stranger\");\n  let loaded = false;\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n    nickname: $nickname,\n  };\n\n  $: {\n    if (!loaded && !$isLoading && $isAuthenticated) {\n      loaded = true\n      getUser(\n        $authToken,\n        (user) => {\n          nickname.set(user.nickname);\n        },\n        (err) => console.log(err)\n      );\n    }\n  }\n\n  const loadUser = async () => {};\n\n  onMount(async () => {\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      var elems = document.querySelectorAll(\".modal\");\n      var instances = M.Modal.init(elems, {});\n    });\n\n    await loadUser();\n  });\n</script>\n\n<div class=\"center-align\">\n\n  {#if $isAuthenticated}\n    <h4>Welcome back {$nickname}</h4>\n    <div>\n      Start playing\n      <button class=\"btn green\">Play</button>\n    </div>\n\n    <div>\n      <p>\n        Or create a new Character\n        <a class=\"waves-effect waves-light btn modal-trigger\" href=\"#modal1\">\n          Modal\n        </a>\n      </p>\n\n    </div>\n  {:else if !$isAuthenticated}\n    <h4>Welcome Stranger</h4>\n    <p>\n      Please\n      <a href=\"/login\" class=\"loginText\">log</a>\n      in or\n      <a href=\"/signup\" class=\"loginText\">signup</a>\n    </p>\n  {/if}\n\n  <h4>TalesMUD</h4>\n  <p>What is TalesMUD about</p>\n\n  <h4>News</h4>\n  <ul>\n    <li>Update #2</li>\n  </ul>\n\n  <!-- Modal Structure -->\n  <div id=\"modal1\" class=\"modal\">\n    <div class=\"modal-content\">\n      <h4>Create new Character</h4>\n      <p>A bunch of text</p>\n    </div>\n    <div class=\"modal-footer\">\n      <a href=\"#!\" class=\"modal-close waves-effect waves-red btn-flat\">\n        Cancel\n      </a>\n      <a href=\"#!\" class=\"modal-close waves-effect waves-green btn-flat\">\n        Create\n      </a>\n    </div>\n  </div>\n</div>\n",
    "<style>\n  .img {\n    width: 64px;\n  }\n  .characterCard {\n    width: 250px;\n    height: 300px;\n    margin: 2em;\n  } \n</style>\n\n<script>\n  import MediaQuery from \"svelte-media-query\";\n  import { fade } from \"svelte/transition\";\n  import moment from \"moment\";\n\n  export let name;\n  export let description;\n  export let created;\n  export let level;\n  export let xp;\n\n  function formattedDate() {\n    return moment(created).format(\"MMMM Do YYYY, h:mm:ss a\");\n  }\n\n  function avatar() {\n    return \"https://robohash.org/\" + name;\n  }\n</script>\n\n\n  <div class=\"card cyan darken-3 hoverable characterCard center-align\">\n    <div class=\"card-content white-text\">\n      <img src=\"{avatar()}\" alt=\"\" class=\"circle img\" />\n            <span class=\"card-title\">{name}</span>\n      <span class=\"card-content\">LVL {level} - XP {xp}</span>\n\n\n    </div>\n    <div class=\"card-content\">\n      <p>{description}</p>\n      <p>{formattedDate()}</p>\n    </div>\n  \n  </div>\n",
    "<style>\n .modal {\n    background-color: darkslategrey;\n  }\n</style>\n\n<script>\n  import CharacterCard from \"./CharacterCard.svelte\";\n  import { onMount } from \"svelte\";\n\n  import { createAuth, getAuth } from \"../auth.js\";\n  import axios from \"axios\";\n  import { onInterval } from \"../utils.js\";\n  import { getCharacters } from \"../api/characters\";\n\n  let data = [];\n  let topTen = [];\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n  };\n\n  onMount(async () => {\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      var elems = document.querySelectorAll(\".modal\");\n      var instances = M.Modal.init(elems, {});\n    });\n  });\n\n\n\n</script>\n\n<!-- Modal Structure -->\n<div id=\"modal1\" class=\"modal\">\n  <div class=\"modal-content\">\n    <h4>Create new Character</h4>\n    <p>A bunch of text</p>\n  </div>\n  <div class=\"modal-footer\">\n    <a href=\"#!\" class=\"modal-close waves-effect waves-red btn-flat\">Cancel</a>\n    <a href=\"#!\" class=\"modal-close waves-effect waves-green btn-flat\">\n      Create\n    </a>\n  </div>\n</div>\n",
    "<style>\n  .sidelist {\n    width: 20em;\n  }\n  textarea {\n    color: white;\n    margin-top: 1em;\n  }\n  input {\n    color: white;\n  }\n  input:disabled {\n    color: white;\n  }\n  .title {\n    font-size: 2em;\n  }\n\n  .btn-small {\n    margin-right: 0.5em;\n    margin-left: 0.5em;\n  }\n\n  .collection-item {\n    color: #333;\n  }\n  .collection {\n    color: #333;\n  }\n\n  .materialize-textarea {\n    border-bottom: none;\n  }\n\n  label {\n    color: #eee;\n  }\n</style>\n\n<script>\n  import { store } from \"./RoomsEditorStore.js\";\n  import { PlusIcon } from \"svelte-feather-icons\";\n  import { writable } from \"svelte/store\";\n  import { onMount } from \"svelte\";\n  import { createAuth, getAuth } from \"../auth.js\";\n\n  import axios from \"axios\";\n  import {\n    getRoom,\n    deleteRoom,\n    getRooms,\n    updateRoom,\n    createRoom,\n  } from \"../api/rooms.js\";\n\n  export let location;\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n  };\n\n  const loadData = async (cb) => {\n    if ($isLoading && !$isAuthenticated) return;\n    getRooms(\n      $authToken,\n      (rooms) => {\n        store.setRooms(rooms);\n        if (cb) cb();\n      },\n      (err) => console.log(err)\n    );\n  };\n\n  onMount(async () => {\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      var elems = document.querySelectorAll(\".collapsible\");\n      var instances = M.Collapsible.init(elems);\n    });\n\n    loadData(() => {\n      store.setSelectedRoom($store.rooms[0]);\n      M.updateTextFields();\n    });\n  });\n\n  const newRoom = () => {\n    let newRoom = {\n      name: \"New Room\",\n      description: \"\",\n      isNew: true,\n      exits: [],\n      actions: [],\n    };\n\n    createRoom(\n      $authToken,\n      newRoom,\n      (room) => {\n        loadData();\n        store.setSelectedRoom(room);\n      },\n      (err) => console.log(err)\n    );\n  };\n\n  const delRoom = async (room) => {\n    deleteRoom(\n      $authToken,\n      $store.selectedRoom.id,\n      () => {\n        console.log(\"delete successful.\");\n        loadData(() => {\n          store.setSelectedRoom($store.rooms[0]);\n        });\n      },\n      () => {\n        console.log(\"create error.\");\n      }\n    );\n  };\n\n  const create = async () => {\n    createRoom(\n      $authToken,\n      $store.selectedRoom,\n      (room) => {\n        console.log(\"create successful.\");\n        loadData();\n        $store.selectedRoom = room;\n      },\n      () => {\n        console.log(\"create error.\");\n      }\n    );\n  };\n  const update = () => {\n    updateRoom(\n      $authToken,\n      $store.selectedRoom.id,\n      $store.selectedRoom,\n      () => {\n        console.log(\"update successful.\");\n        loadData();\n      },\n      () => {\n        console.log(\"update error.\");\n      }\n    );\n  };\n</script>\n\n<div class=\"row\">\n  <div class=\"row\">\n    <span class=\"title col s6 valign-wrapper\">Manage Rooms</span>\n    <button on:click=\"{() => newRoom()}\" class=\"waves-effect waves-light btn-small green col s2\">\n      <PlusIcon size=\"14\" />\n      NEW\n    </button>\n  </div>\n  <div class=\"col s3\">\n    <div class=\"collection\">\n      {#each $store.rooms as room}\n        <a\n          href=\"#!\"\n          class=\"collection-item\"\n          on:click=\"{store.setSelectedRoom(room)}\"\n        >\n          {room.name}\n        </a>\n      {/each}\n    </div>\n  </div>\n\n  {#if $store.selectedRoom}\n    <div>\n\n      <div class=\"col s12 m8\">\n        <div class=\"card-panel cyan darken-4\">\n\n          <input\n            placeholder=\"Room Name\"\n            id=\"room_name\"\n            type=\"text\"\n            bind:value=\"{$store.selectedRoom.name}\"\n            class=\"col s8\"\n          />\n\n          {#if $store.selectedRoom.isNew}\n            <button on:click=\"{() => create()}\" class=\"waves-effect waves-light btn-small green\">\n              Create\n            </button>\n          {:else}\n            <button on:click=\"{() => update()}\" class=\"waves-effect waves-light btn-small green right\">\n              Update\n            </button>\n            <button on:click=\"{() => delRoom()}\" class=\"waves-effect waves-light btn-small red right\">\n              Delete\n            </button>\n          {/if}\n\n          <input\n            placeholder=\"Room ID\"\n            id=\"room_id\"\n            type=\"text\"\n            value=\"{$store.selectedRoom.id}\"\n            disabled\n          />\n\n          <textarea\n            placeholder=\"Room Description\"\n            id=\"room_description\"\n            type=\"text\"\n            class=\"materialize-textarea\"\n            bind:value=\"{$store.selectedRoom.description}\"\n          ></textarea>\n\n        </div>\n\n        {#if $store.selectedRoom.exits}\n          <h6>Exits</h6>\n\n          <ul class=\"collection\">\n\n            {#each $store.selectedRoom.exits as exit}\n              <li class=\"collection-item\">\n                <div>{exit.name}</div>\n                <div>{exit.description}</div>\n              </li>\n            {/each}\n          </ul>\n        {/if}\n\n      </div>\n\n    </div>\n  {/if}\n</div>\n",
    "<style>\n  #terminalWindow {\n    padding: 1em;\n    background: #000;\n    border-width: 2px;\n    border-style: solid;\n    border-color: #33ff2266;\n    border-radius: 0.5em;\n    margin-top: 10em;\n  }\n</style>\n\n<script>\n  import CharacterCreator from \"./../characters/CharacterCreator.svelte\";\n  import \"../../node_modules/xterm/css/xterm.css\";\n  import { onMount, onDestroy } from \"svelte\";\n  import { createAuth, getAuth } from \"../auth.js\";\n  import axios from \"axios\";\n  import xterm from \"xterm\";\n  import LocalEchoController from \"./echo/LocalEchoController\";\n  import fit from \"xterm-addon-fit\";\n  import { createClient, getClient } from \"./Client\";\n  import { wsbackend } from \"../api/base.js\";\n\n  let client;\n  let term;\n  let ws;\n\n  const {\n    isLoading,\n    isAuthenticated,\n    login,\n    logout,\n    authToken,\n    authError,\n    userInfo,\n  } = getAuth();\n\n  $: state = {\n    isLoading: $isLoading,\n    isAuthenticated: $isAuthenticated,\n    authError: $authError,\n    userInfo: $userInfo ? $userInfo.name : null,\n    authToken: $authToken.slice(0, 20),\n  };\n\n  $: {\n    if ($isAuthenticated && $authToken && client && !ws) {\n      // connect to websocket server\n      const url = wsbackend + \"?access_token=\";\n      ws = new WebSocket(url + $authToken);\n      client.setWSClient(ws);\n    }\n  }\n\n  function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  function readLine(localEcho, term) {\n    localEcho\n      .read(\"~$ \")\n      .then((input) => {\n        client.onInput(input);\n        readLine(localEcho, term);\n      })\n      .catch((error) => console.log(`Error reading: ${error}`));\n  }\n\n  const createRenderer = (term, localEcho) => {\n    return (data) => {\n      localEcho.clearInput();\n      term.writeln(data);\n    };\n  };\n\n  const characterCreator = () => {\n    console.log(\"CREATE CHARACTER\");\n\n    var Modalelem = document.querySelector(\".modal\");\n    var instance = M.Modal.init(Modalelem);\n    instance.open();\n  };\n\n  async function setupTerminal() {\n    term = new xterm.Terminal();\n\n    var fitAddon = new fit.FitAddon();\n\n    term.loadAddon(fitAddon);\n\n    // setup terminal\n    term.setOption(\"cursorBlink\", true);\n    term.setOption(\"convertEol\", true);\n\n    term.open(document.getElementById(\"terminal\"));\n    fitAddon.fit();\n\n    const localEcho = new LocalEchoController(term);\n    localEcho.addAutocompleteHandler(autocompleteCommonCommands);\n    client = createClient(createRenderer(term, localEcho), characterCreator);\n\n    readLine(localEcho, term);\n  }\n\n  onMount(async () => {\n    // change global background\n    document.body.style.backgroundImage = \"url('/bg.jpg')\";\n    document.body.style.backdropFilter =\n      \"blur(10px) saturate(30%) brightness(50%)\";\n\n    var nav = document.querySelector(\"nav\");\n    nav.style.backgroundColor = \"#00000000\";\n    setupTerminal();\n  });\n\n  onDestroy(async () => {\n    // change global background\n    document.body.style.backgroundImage = \"\";\n    document.body.style.backdropFilter = \"\";\n\n    var nav = document.querySelector(\"nav\");\n    nav.style.backgroundColor = \"#00000055\";\n    setupTerminal();\n  });\n\n  function autocompleteCommonCommands(index, tokens) {\n    if (index == 0) return [\"north\", \"east\", \"south\", \"west\", \"say\"];\n    return [];\n  }\n</script>\n\n<CharacterCreator />\n\n<div id=\"terminalWindow\" class=\"z-depth-5\">\n  <div id=\"terminal\"></div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AACU,IAAI,AAAE,CAAC,AACb,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,gBAAgB,CAAC,IAAI,CACjC,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,GAAG,CAKZ,MAAM,CAAE,IAAI,CAEZ,mBAAmB,CAAE,MAAM,CAC3B,iBAAiB,CAAE,SAAS,CAC5B,eAAe,CAAE,KAAK,CACtB,eAAe,CAAE,IAAI,CACrB,oBAAoB,CAAE,IAAI,AAC5B,CAAC,AACO,MAAM,AAAE,CAAC,AACf,eAAe,CAAE,IAAI,AACvB,CAAC,AACO,CAAC,AAAE,CAAC,AACV,KAAK,CAAE,OAAO,CAEd,eAAe,CAAE,IAAI,AACvB,CAAC,AACO,OAAO,AAAE,CAAC,AAChB,eAAe,CAAE,IAAI,AACvB,CAAC,AAED,YAAY,eAAC,CAAC,AACZ,YAAY,CAAE,KAAK,AACrB,CAAC,AAEO,SAAS,AAAE,CAAC,AAClB,eAAe,CAAE,IAAI,CACrB,oBAAoB,CAAE,IAAI,CAC1B,KAAK,CAAE,IAAI,AACb,CAAC,AACD,GAAG,eAAC,CAAC,AACH,UAAU,CAAE,SAAS,AACvB,CAAC,AACD,GAAG,eAAC,CAAC,AACH,aAAa,CAAE,GAAG,AACpB,CAAC;ACtCD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACb,CAAC,AACD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACb,CAAC,AACD,WAAW,eAAC,CAAC,AACX,KAAK,CAAE,IAAI,AACb,CAAC;ACdD,WAAW,eAAC,CAAC,AACX,YAAY,CAAE,GAAG,AACnB,CAAC,AAED,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,IAAI,AACb,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,AACb,CAAC;ACVD,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,WAAW,AACpB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,aAAa,AACjC,CAAC;ACND,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,AACb,CAAC,AACD,cAAc,cAAC,CAAC,AACd,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,AACb,CAAC;ACPF,MAAM,cAAC,CAAC,AACL,gBAAgB,CAAE,aAAa,AACjC,CAAC;ACCD,QAAQ,cAAC,CAAC,AACR,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,GAAG,AACjB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,KAAK,AACd,CAAC,AACD,mBAAK,SAAS,AAAC,CAAC,AACd,KAAK,CAAE,KAAK,AACd,CAAC,AACD,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,GAAG,AAChB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,YAAY,CAAE,KAAK,CACnB,WAAW,CAAE,KAAK,AACpB,CAAC,AAED,gBAAgB,cAAC,CAAC,AAChB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,WAAW,cAAC,CAAC,AACX,KAAK,CAAE,IAAI,AACb,CAAC,AAED,qBAAqB,cAAC,CAAC,AACrB,aAAa,CAAE,IAAI,AACrB,CAAC;AC/BD,eAAe,eAAC,CAAC,AACf,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,SAAS,CACvB,aAAa,CAAE,KAAK,CACpB,UAAU,CAAE,IAAI,AAClB,CAAC"
}